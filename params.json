{"name":"Jsonvalidate.js","tagline":"Simple json validate method.","body":"jsonValidate.js\r\n===============\r\n\r\nIts a simple method to validate Jsons from ajax request. Full tested. For example you can look at test/index.html.\r\n\r\nIt recognize json objects, objects with arrays and variables. If we expected a array we should create map with array\r\nwith one value element to map.\r\n\r\nFirst example show object map without validate object types.\r\n\r\nExample 1: Structure.\r\n---\r\n```js\r\n\tvar categories = {\r\n\t//Array\r\n\tcategories: [\r\n\t\t\t\t//Array element object\r\n              {\r\n                id: void 0,\r\n                name: void 0,\r\n                image: void 0\r\n              }\r\n      ],\r\n      //Object variable\r\n      shop: void 0\r\n\t}\r\n      $.ajax(\"/categories\", {\r\n              type: \"POST\",\r\n              dataType: \"json\",\r\n              success: function(data, textStatus, jqXHR) {\r\n                if (validateJson(categories,data)) {\r\n                 \talert(\"Working\");\r\n                } else {\r\n                  \talert(\"Not working\");\r\n                }\r\n              }\r\n            }\r\n```\r\n\r\nSecond example show how to validate json types. In map object, change variables to some real values. Method check\r\nvalue constructor in json and in map. If they equal then it will pass.\r\n\r\nExample 2 : Type.\r\n---\r\n```js\r\n\tvar categories = {\r\n\t//Array\r\n\tcategories: [\r\n\t\t\t\t//Array element object\r\n              {\r\n                id: 1,\r\n                name: \"\",\r\n                image: \"\"\r\n              }\r\n      ],\r\n      //Object variable\r\n      shop: \"\"\r\n\t}\r\n      $.ajax(\"/categories\", {\r\n              type: \"POST\",\r\n              dataType: \"json\",\r\n              success: function(data, textStatus, jqXHR) {\r\n                if (validateJson(categories,data)) {\r\n                 \talert(\"Working\");\r\n                } else {\r\n                  \talert(\"Not working\");\r\n                }\r\n              }\r\n            }\r\n```\r\n Example 3 : RegExps.\r\n---\r\nWe can use validator with RegExps. Validator understand RegExps objects, pattern objects ( in /  / colons) and strings with RegExp patttern (if string is not empty, validator use it to build RegExp object).  \r\n```js\r\n\tvar user = {\r\n\t//Array\r\n\temails: [\r\n\t\t\t\t//Array element object\r\n              {\r\n              \t//Pattern RegExp object\r\n                email_1: /^[A-Za-z0-9](([_\\.\\-]?[a-zA-Z0-9]+)*)@([A-Za-z0-9]+)(([\\.\\-]?[a-zA-Z0-9]+)*)\\.([A-Za-z]{2,})$/\r\n                //RegExp object\r\n                email_2: new RegExp(\"^[A-Za-z0-9](([_\\.\\-]?[a-zA-Z0-9]+)*)@([A-Za-z0-9]+)(([\\.\\-]?[a-zA-Z0-9]+)*)\\.([A-Za-z]{2,})$\"),\r\n                //String pattern\r\n                email_3: \"^[A-Za-z0-9](([_\\.\\-]?[a-zA-Z0-9]+)*)@([A-Za-z0-9]+)(([\\.\\-]?[a-zA-Z0-9]+)*)\\.([A-Za-z]{2,})$\",\r\n              }\r\n      ],\r\n      //Object variable\r\n      name: \"\"\r\n\t}\r\n      $.ajax(\"/users\", {\r\n              type: \"POST\",\r\n              dataType: \"json\",\r\n              success: function(data, textStatus, jqXHR) {\r\n                if (validateJson(user,data)) {\r\n                 \talert(\"Working\");\r\n                } else {\r\n                  \talert(\"Not working\");\r\n                }\r\n              }\r\n            }\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}